<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Software &#8211; Daniel Biller&#039;s Portfolio</title>
	<atom:link href="/portfolio-category/software/feed/" rel="self" type="application/rss+xml" />
	<link>/</link>
	<description></description>
	<lastBuildDate>Sun, 26 Feb 2023 03:05:16 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.1.1</generator>

<image>
	<url>/wp-content/uploads/2023/02/transLogo-1-60x60.png</url>
	<title>Software &#8211; Daniel Biller&#039;s Portfolio</title>
	<link>/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>Financial Analytics Microservice</title>
		<link>/projects/financial-analytics-microservice/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Sat, 25 Feb 2023 18:51:48 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=734</guid>

					<description><![CDATA[Summary What It Does How I Did It Improvements I Made What I Learned]]></description>
										<content:encoded><![CDATA[
<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong> – REST API for gathering statistics about Investment Portfolio Recommendation System</li>



<li><strong>Technologies Used</strong> – TypeScript, Vue.js, Apollo, GraphQL, Swagger</li>



<li><strong>My Accomplishments</strong>
<ul>
<li>My microservice was used in production to improve the Smart Advisory System, providing value to customers and increasing subscription sign-ups and renewals</li>



<li>Gained hands-on experience with the Agile methodology</li>



<li>Created customer facing documentation for new API</li>
</ul>
</li>
</ul>



<h2>What It Does</h2>



<h2>How I Did It</h2>



<h2>Improvements I Made</h2>



<h2>What I Learned</h2>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Autonomous Payload Delivery Drone</title>
		<link>/projects/delivery-drone/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Sat, 25 Feb 2023 18:26:56 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=726</guid>

					<description><![CDATA[Summary What It Does How I Did It Improvements I Made What I Learned]]></description>
										<content:encoded><![CDATA[
<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong> – Autonomous Drone for last-mile package delivery</li>



<li><strong>Technologies Used</strong> – C++, Python, Raspberry Pi, PX4, Linux, ORBSlam 3.0</li>



<li><strong>My Accomplishments</strong>
<ul>
<li>Decreased system unit cost by 40%</li>



<li>Implemented many different software into a cohesive system</li>



<li>Gathered technical requirements and design specifications</li>



<li>Designed and actualized project from start to finish</li>
</ul>
</li>
</ul>



<h2>What It Does</h2>



<h2>How I Did It</h2>



<h2>Improvements I Made</h2>



<h2>What I Learned</h2>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Real Time Systems Benchmark Tool</title>
		<link>/projects/rtis-benchmarker/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Sat, 25 Feb 2023 18:24:58 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=725</guid>

					<description><![CDATA[Summary What It Does How I Did It Improvements I Made What I Learned]]></description>
										<content:encoded><![CDATA[
<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong> – Benchmarking tool used to train AI to predict task overruns and  </li>



<li><strong>Technologies Used</strong> – Java, FreeRTOS, MicroROS, Spike (RISCV-ISA-SIM), FPGA</li>



<li><strong>My Accomplishments</strong>
<ul>
<li></li>
</ul>
</li>
</ul>



<h2>What It Does</h2>



<h2>How I Did It</h2>



<h2>Improvements I Made</h2>



<h2>What I Learned</h2>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Unix Shell Terminal</title>
		<link>/projects/unix-shell-terminal/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Sat, 25 Feb 2023 18:22:55 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=724</guid>

					<description><![CDATA[Summary What It Does How I Did It Improvements I Made What I Learned]]></description>
										<content:encoded><![CDATA[
<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong> – Custom Shell program implemented from scratch</li>



<li><strong>Technologies Used</strong> – C++</li>



<li><strong>My Accomplishments</strong>
<ul>
<li></li>
</ul>
</li>
</ul>



<h2>What It Does</h2>



<h2>How I Did It</h2>



<h2>Improvements I Made</h2>



<h2>What I Learned</h2>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Virtual Memory Simulator</title>
		<link>/projects/virtual-memory-simulator/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Sat, 25 Feb 2023 05:06:35 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=705</guid>

					<description><![CDATA[I utilized Java to simulate a computer’s virtual memory. I then used my program to study the impacts of page size, cache size, and code localization on the computer’s performance. Summary What It Does The program simulates a series of memory accesses while keeping track of key performance statistics like hit rate and hard disk &#8230; ]]></description>
										<content:encoded><![CDATA[
<p>I utilized Java to simulate a computer’s virtual memory. I then used my program to study the impacts of page size, cache size, and code localization on the computer’s performance.</p>



<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong>&nbsp;– Program to analyze cache hit-rate of memory access patterns</li>



<li><strong>Technologies Used</strong>&nbsp;– Java</li>



<li><strong>My Accomplishments</strong>
<ul>
<li>Gained understanding of physical memory and cache operation</li>



<li>Studied how access patterns impact hit-rate and access time</li>



<li>Applied Object Oriented Programming best practices</li>
</ul>
</li>
</ul>



<h2>What It Does</h2>



<div class="wp-block-media-text alignwide is-stacked-on-mobile"><figure class="wp-block-media-text__media"><img decoding="async" width="729" height="943" src="/wp-content/uploads/2023/02/desk-1-1.png" alt="" class="wp-image-578 size-full" srcset="/wp-content/uploads/2023/02/desk-1-1.png 729w, /wp-content/uploads/2023/02/desk-1-1-232x300.png 232w, /wp-content/uploads/2023/02/desk-1-1-46x60.png 46w" sizes="(max-width: 729px) 100vw, 729px" /></figure><div class="wp-block-media-text__content">
<p>The program simulates a series of memory accesses while keeping track of key performance statistics like hit rate and hard disk accesses. When a memory access is requested, the program first checks the page table to see if that address is in TLB. If there is a TLB miss, the program moves on to check the page table. If that address is still not found, that means that it must be on the hard disk. The program simulates reading the block from the hard disk and finds an open frame in the frame table to put the block. The simulation puts the entry into the page table and marks the corresponding frame as allocated.</p>
</div></div>



<p>Finally the translation is moved from the page table to the TLB to simulate caching the data. If any of these tables are full, an eviction is done before moving the data. The simulation implements a fully associative mapping, the write-back scheme, and the least recently used eviction method.</p>



<h2>How I Used It</h2>



<p>I used this program to study how page size and cache size can impact the performance of a computer. In my case study, I tested 1000 random memory accesses of 8 pages versus 1000 random memory accesses from 9 pages. This seems like a tiny difference, but the outcome changed dramatically. The TLB hitrate dropped from 99% to only 87% because the data could no longer completely fit in cache.</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="320" src="/wp-content/uploads/2023/02/a-1-1024x320.png" alt="" class="wp-image-569" srcset="/wp-content/uploads/2023/02/a-1-1024x320.png 1024w, /wp-content/uploads/2023/02/a-1-300x94.png 300w, /wp-content/uploads/2023/02/a-1-768x240.png 768w, /wp-content/uploads/2023/02/a-1-192x60.png 192w, /wp-content/uploads/2023/02/a-1.png 1470w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<div style="height:1em" aria-hidden="true" class="wp-block-spacer"></div>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="307" src="/wp-content/uploads/2023/02/b-1-1024x307.png" alt="" class="wp-image-571" srcset="/wp-content/uploads/2023/02/b-1-1024x307.png 1024w, /wp-content/uploads/2023/02/b-1-300x90.png 300w, /wp-content/uploads/2023/02/b-1-768x230.png 768w, /wp-content/uploads/2023/02/b-1-200x60.png 200w, /wp-content/uploads/2023/02/b-1.png 1482w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<p>Additionally, I looked at how code localization can affect the speed at which that code runs. I simulated code jumping outside of its current block 25 times versus 400 times. This resulted in a hitrate decrease of 7.5% which would cause the code to execute more slowly.</p>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="305" src="/wp-content/uploads/2023/02/c-1-1024x305.png" alt="" class="wp-image-573" srcset="/wp-content/uploads/2023/02/c-1-1024x305.png 1024w, /wp-content/uploads/2023/02/c-1-300x89.png 300w, /wp-content/uploads/2023/02/c-1-768x229.png 768w, /wp-content/uploads/2023/02/c-1-201x60.png 201w, /wp-content/uploads/2023/02/c-1.png 1477w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<div style="height:1em" aria-hidden="true" class="wp-block-spacer"></div>



<figure class="wp-block-image size-large"><img decoding="async" width="1024" height="302" src="/wp-content/uploads/2023/02/d-1-1024x302.png" alt="" class="wp-image-575" srcset="/wp-content/uploads/2023/02/d-1-1024x302.png 1024w, /wp-content/uploads/2023/02/d-1-300x88.png 300w, /wp-content/uploads/2023/02/d-1-768x226.png 768w, /wp-content/uploads/2023/02/d-1-204x60.png 204w, /wp-content/uploads/2023/02/d-1.png 1473w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure>



<h2>What I Learned</h2>



<p>Before writing this program I thought I had a good understanding of how virtual memory worked. In development I realized all the parts I overlooked. By the time I finished, I had gone over every detail and intricacy of the&nbsp;<strong>virtual memory hierarchy</strong>&nbsp;that&nbsp;<strong>I would consider myself an expert.</strong>&nbsp;Additionally,&nbsp;<strong>I learned the importance of understanding a project’s requirements.</strong>&nbsp;Many school assignments can be learned during development, but more complex projects need to be planned out and fully understood before starting. I also&nbsp;<strong>gain a better grasp of object-oriented best practices</strong>&nbsp;like abstraction and minimizing side effects.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Particle Simulation – Computational Biomechanics Research</title>
		<link>/projects/particle-simulation/</link>
		
		<dc:creator><![CDATA[dbiller]]></dc:creator>
		<pubDate>Fri, 24 Feb 2023 23:05:53 +0000</pubDate>
				<guid isPermaLink="false">/?post_type=rara-portfolio#038;p=660</guid>

					<description><![CDATA[This project is part of a team effort to study colloids movement on 2D manifolds, the formation of lattice defects, and how they relate to the morphing of viral capsids. The team is led by Dr. Luigi Perotti at the University of Central Florida. Summary What it Does This program simulates particle interaction using a &#8230; ]]></description>
										<content:encoded><![CDATA[
<div class="wp-block-media-text alignwide is-stacked-on-mobile" style="grid-template-columns:53% auto"><figure class="wp-block-media-text__media"><img decoding="async" width="499" height="519" src="/wp-content/uploads/2023/02/ezgif.com-gif-maker-3-3.gif" alt="" class="wp-image-587 size-full"/></figure><div class="wp-block-media-text__content">
<p>This project is part of a team effort to study colloids movement on 2D manifolds, the formation of lattice defects, and how they relate to the morphing of viral capsids. The team is led by Dr. Luigi Perotti at the University of Central Florida.</p>
</div></div>



<h2>Summary</h2>



<ul>
<li><strong>What Is It?</strong> &#8211; Simulated Annealing Program</li>



<li><strong>Technologies Used</strong> &#8211; Julia</li>



<li><strong>My Accomplishments</strong>
<ul>
<li>Improved speed by 40x</li>



<li>Drove project to completion</li>



<li>Effectively communicated technical requirements with a non-technical stakeholder</li>
</ul>
</li>
</ul>



<h2>What it Does</h2>



<div class="wp-block-media-text alignwide is-stacked-on-mobile" style="grid-template-columns:56% auto"><figure class="wp-block-media-text__media"><img decoding="async" width="600" height="400" src="/wp-content/uploads/2023/02/EnergyGraph-1.png" alt="" class="wp-image-579 size-full" srcset="/wp-content/uploads/2023/02/EnergyGraph-1.png 600w, /wp-content/uploads/2023/02/EnergyGraph-1-300x200.png 300w, /wp-content/uploads/2023/02/EnergyGraph-1-90x60.png 90w" sizes="(max-width: 600px) 100vw, 600px" /></figure><div class="wp-block-media-text__content">
<p>This program simulates particle interaction using a modified version of the Kinetic Monte Carlo Algorithm. After taking in a number of parameters including the number of particles, the number of iterations, and the equilibrium distance, the program initializes a set of randomly positioned particles.</p>
</div></div>



<p>During each timestep, each particle is perturbed and this move is either saved or reverted based on whether it lowers the total system energy. Eventually, the lowest possible energy configuration is reached.</p>



<div class="is-layout-flex wp-container-3 wp-block-columns">
<div class="is-layout-flow wp-block-column">
<figure class="wp-block-image size-full"><img decoding="async" width="700" height="519" src="/wp-content/uploads/2023/02/1-1.png" alt="" class="wp-image-565" srcset="/wp-content/uploads/2023/02/1-1.png 700w, /wp-content/uploads/2023/02/1-1-300x222.png 300w, /wp-content/uploads/2023/02/1-1-81x60.png 81w" sizes="(max-width: 700px) 100vw, 700px" /></figure>
</div>



<div class="is-layout-flow wp-block-column">
<figure class="wp-block-image size-full"><img decoding="async" width="700" height="519" src="/wp-content/uploads/2023/02/1250-1.png" alt="" class="wp-image-567" srcset="/wp-content/uploads/2023/02/1250-1.png 700w, /wp-content/uploads/2023/02/1250-1-300x222.png 300w, /wp-content/uploads/2023/02/1250-1-81x60.png 81w" sizes="(max-width: 700px) 100vw, 700px" /></figure>
</div>
</div>



<h2>How I Did It</h2>



<div class="wp-block-media-text alignwide has-media-on-the-right is-stacked-on-mobile"><div class="wp-block-media-text__content">
<p>I started with the sudo-code for the modified Kinetic Monte Carlo algorithm. Using the Julia programing language, I implemented the algorithm along with supporting features such as estimated completion time, outputting an energy-time graph, and creating a particle movement animation. This iteration was extremely slow, but it worked.</p>
</div><figure class="wp-block-media-text__media"><img decoding="async" width="1024" height="941" src="/wp-content/uploads/2023/02/Sudocode-1024x941-2.png" alt="" class="wp-image-604 size-full" srcset="/wp-content/uploads/2023/02/Sudocode-1024x941-2.png 1024w, /wp-content/uploads/2023/02/Sudocode-1024x941-2-300x276.png 300w, /wp-content/uploads/2023/02/Sudocode-1024x941-2-768x706.png 768w, /wp-content/uploads/2023/02/Sudocode-1024x941-2-65x60.png 65w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>



<h2>Improvements I Made</h2>



<p>I was able to&nbsp;<strong>double the speed of my program</strong>&nbsp;simply by reducing repeated computations. For example, if I calculate the distance between particle&nbsp;<em>a</em>&nbsp;and particle&nbsp;<em>b</em>, then I don’t need to compare the distance again between&nbsp;<em>b</em>&nbsp;and&nbsp;<em>a</em>. I was also able to utilize parallelization, as each particle movement is independent.</p>



<p>From here I completely restructured the entire program to&nbsp;<strong>improve the energy calculation time complexity from O(n<sup>2</sup>) to O(n).</strong>&nbsp;This was a huge improvement because it increase the maximum number of particles from around 30 to a couple thousand. I did this by spatially encoding the position of each particles in memory.&nbsp;<em></em>I broke the region up into zones and each zone was an independent particle array. Each particle only needs to check it’s own zone, and the eight adjacent zones. Because zones scale with equilibrium distance, each particle only needs to compare to a small constant number of other particles.</p>


<div class="wp-block-image">
<figure class="aligncenter size-full is-resized"><img decoding="async" src="/wp-content/uploads/2023/02/particle-search-1-1024x887-2.png" alt="" class="wp-image-599" width="-85" height="-73" srcset="/wp-content/uploads/2023/02/particle-search-1-1024x887-2.png 1024w, /wp-content/uploads/2023/02/particle-search-1-1024x887-2-300x260.png 300w, /wp-content/uploads/2023/02/particle-search-1-1024x887-2-768x665.png 768w, /wp-content/uploads/2023/02/particle-search-1-1024x887-2-69x60.png 69w" sizes="(max-width: 1024px) 100vw, 1024px" /></figure></div>


<p>Overall, the improvements I made were able to&nbsp;<strong>speed up the original program by over 40 times.</strong></p>



<h2>What I Learned</h2>



<div class="wp-block-media-text alignwide has-media-on-the-right is-stacked-on-mobile"><div class="wp-block-media-text__content">
<p>This was the most challenging project I have ever completed and I learned so much during the process. First, I had never worked with this programming language before, but now I would consider myself&nbsp;<strong>proficient in Julia.</strong>&nbsp;Another thing I learned was&nbsp;<strong>how to obtain technical requirements from a non-technical person.&nbsp;</strong>I was given the task to “implement this algorithm” and had to figure everything out on my own. This taught me how to ask questions and learn what the goal of the project was, as well as determine what features would contribute to the goal. In implementing parallelism and my spatial encoding scheme,&nbsp;<strong>I learned a lot about memory management and working with shared memory.</strong>&nbsp;The final big lesson was learning&nbsp;<strong>how to develop software as a piece of a bigger project.</strong>&nbsp;My program need to accept inputs from a completely separate program and then map outputs in a way the next program would understand. Communicating with my team and being able to work together to line everything up was definitely challenging, but I developed a deeper understanding of team dynamics in the process.</p>
</div><figure class="wp-block-media-text__media"><img decoding="async" width="500" height="866" src="/wp-content/uploads/2023/02/ezgif.com-gif-maker-2-3.gif" alt="" class="wp-image-586 size-full"/></figure></div>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
